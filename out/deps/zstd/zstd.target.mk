# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := zstd
DEFS_Debug := \
	'-D_GLIBCXX_USE_CXX11_ABI=1' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DNODE_OPENSSL_CONF_NAME=nodejs_conf' \
	'-DICU_NO_USER_DATA_OVERRIDE' \
	'-D__STDC_FORMAT_MACROS' \
	'-DOPENSSL_NO_PINSHARED' \
	'-DOPENSSL_THREADS' \
	'-DXXH_NAMESPACE=ZSTD_' \
	'-DZSTD_MULTITHREAD' \
	'-DZSTD_DISABLE_ASM' \
	'-DDEBUG' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-pthread \
	-m64 \
	-g \
	-O0

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-fno-rtti \
	-fno-exceptions \
	-fno-strict-aliasing \
	-std=gnu++20

INCS_Debug := \
	-I$(srcdir)/deps/zstd/lib

DEFS_Release := \
	'-D_GLIBCXX_USE_CXX11_ABI=1' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DNODE_OPENSSL_CONF_NAME=nodejs_conf' \
	'-DICU_NO_USER_DATA_OVERRIDE' \
	'-D__STDC_FORMAT_MACROS' \
	'-DOPENSSL_NO_PINSHARED' \
	'-DOPENSSL_THREADS' \
	'-DXXH_NAMESPACE=ZSTD_' \
	'-DZSTD_MULTITHREAD' \
	'-DZSTD_DISABLE_ASM'

# Flags passed to all source files.
CFLAGS_Release := \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-pthread \
	-m64 \
	-O3 \
	-fno-omit-frame-pointer

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-fno-rtti \
	-fno-exceptions \
	-fno-strict-aliasing \
	-std=gnu++20

INCS_Release := \
	-I$(srcdir)/deps/zstd/lib

OBJS := \
	$(obj).target/$(TARGET)/deps/zstd/lib/common/debug.o \
	$(obj).target/$(TARGET)/deps/zstd/lib/common/entropy_common.o \
	$(obj).target/$(TARGET)/deps/zstd/lib/common/fse_decompress.o \
	$(obj).target/$(TARGET)/deps/zstd/lib/compress/fse_compress.o \
	$(obj).target/$(TARGET)/deps/zstd/lib/compress/huf_compress.o \
	$(obj).target/$(TARGET)/deps/zstd/lib/decompress/huf_decompress.o \
	$(obj).target/$(TARGET)/deps/zstd/lib/common/pool.o \
	$(obj).target/$(TARGET)/deps/zstd/lib/common/threading.o \
	$(obj).target/$(TARGET)/deps/zstd/lib/common/xxhash.o \
	$(obj).target/$(TARGET)/deps/zstd/lib/common/zstd_common.o \
	$(obj).target/$(TARGET)/deps/zstd/lib/common/error_private.o \
	$(obj).target/$(TARGET)/deps/zstd/lib/compress/hist.o \
	$(obj).target/$(TARGET)/deps/zstd/lib/compress/zstd_compress.o \
	$(obj).target/$(TARGET)/deps/zstd/lib/compress/zstd_compress_literals.o \
	$(obj).target/$(TARGET)/deps/zstd/lib/compress/zstd_compress_sequences.o \
	$(obj).target/$(TARGET)/deps/zstd/lib/compress/zstd_compress_superblock.o \
	$(obj).target/$(TARGET)/deps/zstd/lib/compress/zstd_double_fast.o \
	$(obj).target/$(TARGET)/deps/zstd/lib/compress/zstd_fast.o \
	$(obj).target/$(TARGET)/deps/zstd/lib/compress/zstd_lazy.o \
	$(obj).target/$(TARGET)/deps/zstd/lib/compress/zstd_ldm.o \
	$(obj).target/$(TARGET)/deps/zstd/lib/compress/zstd_opt.o \
	$(obj).target/$(TARGET)/deps/zstd/lib/compress/zstd_preSplit.o \
	$(obj).target/$(TARGET)/deps/zstd/lib/compress/zstdmt_compress.o \
	$(obj).target/$(TARGET)/deps/zstd/lib/decompress/zstd_ddict.o \
	$(obj).target/$(TARGET)/deps/zstd/lib/decompress/zstd_decompress.o \
	$(obj).target/$(TARGET)/deps/zstd/lib/decompress/zstd_decompress_block.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-pthread \
	-rdynamic \
	-pthread \
	-m64

LDFLAGS_Release := \
	-pthread \
	-rdynamic \
	-pthread \
	-m64

LIBS := \
	-lzstd

$(obj).target/deps/zstd/libzstd.a: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(obj).target/deps/zstd/libzstd.a: LIBS := $(LIBS)
$(obj).target/deps/zstd/libzstd.a: TOOLSET := $(TOOLSET)
$(obj).target/deps/zstd/libzstd.a: $(OBJS)
	$(call create_thin_archive,$@,$^)

# Add target alias
.PHONY: zstd
zstd: $(obj).target/deps/zstd/libzstd.a

# Add target alias to "all" target.
.PHONY: all
all: zstd

